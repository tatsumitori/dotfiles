" profile start profile.txt
" profile file ~/dotfiles/.vim/rc/*
" profile func dein#*

" .vimrc 始めの辺りに書く
" 一旦ファイルタイプ関連を無効化する
filetype off

" Vi互換をオフ
if &compatible
  set nocompatible
endif

" vimprocのDLLを最新に更新する
let g:vimproc#download_windows_dll = 1

" パス設定
function! s:source_rc(path, ...) abort "{{{
  let use_global = get(a:000, 0, !has('vim_starting'))
  " let abspath = resolve(expand('~/.vim/rc/' . a:path))
  let abspath = resolve(expand('~/dotfiles/.vim/rc/' . a:path))
  if !use_global
    execute 'source' fnameescape(abspath)
    return
  endif

  " substitute all 'set' to 'setglobal'
  let content = map(readfile(abspath),
        \ 'substitute(v:val, "^\\W*\\zsset\\ze\\W", "setglobal", "")')
  " create tempfile and source the tempfile
  let tempfile = tempname()
  try
    call writefile(content, tempfile)
    execute 'source' fnameescape(tempfile)
  finally
    if filereadable(tempfile)
      call delete(tempfile)
    endif
  endtry
endfunction"}}}

" 古い自動コマンドグループを破棄する
augroup MyAutoCmd
  autocmd!
"   autocmd FileType,Syntax,BufNewFile,BufNew,BufRead *?
"         \ call vimrc#on_filetype()
"   autocmd CursorHold *.toml syntax sync minlines=300
augroup END

" vimの種類によってプラグインフォルダを変更する
" if exists('g:nyaovim_version')
"   let s:dein_cache_path = expand('~/.cache/nyaovim/dein')
" elseif has('nvim')
if has('nvim')
  let s:dein_cache_path = expand('~/.cache/nvim/dein')
else
  let s:dein_cache_path = expand('~/.cache/vim/dein')
endif


" dein.vimの設定 ---------------------------------------------------------------

" パス設定
let s:dein_dir = s:dein_cache_path
                 \ .'/repos/github.com/Shougo/dein.vim'

" dein.vim がなければ github から落としてくる
if &runtimepath !~ '/dein.vim'
  if !isdirectory(s:dein_dir)
    execute '!git clone https://github.com/Shougo/dein.vim' s:dein_dir
  endif
  execute 'set runtimepath+=' . fnamemodify(s:dein_dir, ':p')
endif

" 設定開始
if dein#load_state(s:dein_cache_path)
  call dein#begin(s:dein_cache_path)

"   call dein#load_toml('~/.config/nvim/dein.toml', {'lazy' : 0})
"   call dein#load_toml('~/.config/nvim/deinlazy.toml', {'lazy' : 1})
  call dein#load_toml(fnamemodify(expand('<sfile>'), ':h').'/rc/dein.toml', {'lazy' : 0})
  call dein#load_toml(fnamemodify(expand('<sfile>'), ':h').'/rc/deinlazy.toml', {'lazy' : 1})

"   if exists('g:nyaovim_version')
"     call dein#add('rhysd/nyaovim-popup-tooltip')
"     call dein#add('rhysd/nyaovim-markdown-preview')
"     call dein#add('rhysd/nyaovim-mini-browser')
"   endif

  " 設定終了
  call dein#end()
  call dein#save_state()
endif

" 未インストールチェック
if dein#check_install()
  call dein#install()
endif


" 初期化以外で呼ばれた場合
if !has('vim_starting')
  call dein#call_hook('source')
  call dein#call_hook('post_source')

  " シンタックスハイライトの設定
  syntax enable
  " ファイルタイプ関連を有効にする
  filetype plugin indent on
endif


" ---------------------------------------------------------------------

" オプション設定ファイルのロード
call s:source_rc('options.rc.vim')

" キーマップ設定ファイルのロード
call s:source_rc('keymap.rc.vim')

" nvimの場合
" if has('nvim')
"   call s:source_rc('neovim.rc.vim')
" endif

" OS別
" if IsWindows()
"   call s:source_rc('windows.rc.vim')
" else
"   call s:source_rc('unix.rc.vim')
" endif

" GUI設定
" if !has('nvim') && has('gui')
"   call s:source_rc('gui.rc.vim')
" endif

